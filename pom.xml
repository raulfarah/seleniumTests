<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.seleniumTesting</groupId>
	<artifactId>SeleniumTesting</artifactId>
	<version>1.0</version>
	<packaging>jar</packaging>

	<dependencies>	
		<dependency>									<!-- TestNg-->
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.8.8</version>
			<scope>test</scope>
		</dependency>									

		<dependency>									<!-- Selenium -->
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>2.46.0</version>
		</dependency>														

		<dependency>									<!-- logging - log4j -->
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>2.2</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>2.2</version>
		</dependency>						        

		<dependency>									<!-- Jexcel -->
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>		

	</dependencies>	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.3</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<!-- generate javadoc on mvn package command -->
							<goal>test-javadoc</goal>
						</goals>
					</execution>	
				</executions>				
			</plugin> 						
			<plugin>
			    <!--important Set version of source and target for the compiler-plugin  -->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>			
			<plugin>
				<!--  deploy to GitHub branch mvn-repo -->
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.1</version>
				<configuration>
					<altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
				</configuration>
			</plugin>
						
						

			<!-- build single executable jar file with all dependencies -->
			<!-- This jar is too big and exhausts memory commented out for now -->
			<!-- <plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.5.5</version>
				<executions>
					<execution>
						<id>create-my-bundle</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptorRefs>
								<descriptorRef>jar-with-dependencies</descriptorRef>
							</descriptorRefs>
							<archive>
								<manifest>
									#not sure what this is
									<mainClass>my.package.to.my.MainClass</mainClass>
								</manifest>
							</archive>						
						</configuration>
					</execution>
				</executions>
			</plugin>  -->			
			<plugin>
				<!-- site-maven-plugin from github -->
				<!--  Push project artfacts on to github mvn-repo branch-->
				<groupId>com.github.github</groupId>
				<artifactId>site-maven-plugin</artifactId>
				<version>0.10</version>
				<executions>
					<execution>
						<goals>
							<goal>site</goal>
						</goals>
						<phase>deploy</phase>
					</execution>
				</executions>
				<configuration>
					<message>Building site for ${project.version}</message>
					<server>github</server>					
					<message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
					<noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
					<outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
					<branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
					<includes><include>**/*</include></includes>
					<repositoryName>test</repositoryName>                      <!-- github repo name -->
					<repositoryOwner>raulfarah</repositoryOwner>    		   <!-- github username  -->					
				</configuration>				
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<reportPlugins>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-project-info-reports-plugin</artifactId>
							<version>2.8</version>
							<configuration>
								<dependencyDetailsEnabled>true</dependencyDetailsEnabled>
								<dependencyLocationsEnabled>true</dependencyLocationsEnabled>
							</configuration>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-javadoc-plugin</artifactId>
							<version>2.10.3</version>
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-surefire-report-plugin</artifactId>
							<version>2.10</version>           <!-- version not downloaded ? -->
						</plugin>
						<plugin>
							<groupId>org.apache.maven.plugins</groupId>
							<artifactId>maven-checkstyle-plugin</artifactId>
							<version>2.10</version>               <!-- version not downloaded ? -->
						</plugin>
					</reportPlugins>
				</configuration>
			</plugin>		
			<plugin>				
				<!-- site docs to github gh-pages(mvn clean site:site scm-publish:publish-scm) -->
						
				<!-- this maven-scm-publish-plugin  not working for me yet-->
			
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-publish-plugin</artifactId>
				<version>1.1</version>   	
				
				<configuration>
				    <!-- directory where site docs are located -->                  
					<content>${project.build.directory}/site</content>
					
					<pubScmUrl>scm:git:https://raulfarah@github.com/raulfarah/test.git</pubScmUrl>  
					<!--
						
                    this is correct example scm:git:https://vitorsouza@github.com/vitorsouza/EngeSoft.git						
					-->

					<scmBranch>gh-pages</scmBranch> <!-- branch with static site -->
					
					<checkinComment>Publishing javadoc for ${project.artifactId}:${project.version}</checkinComment>

					
					<!-- configure the plugin to try update rather than a full checkout/clone -->
					<!-- <tryUpdate>true</tryUpdate>   -->
					
					<skipDeletedFiles>true</skipDeletedFiles>
					<dryRun>false</dryRun>
					<serverId>github</serverId>		

				</configuration>
			</plugin> 		  
		</plugins>
	</build>	
	
	<!-- 
	Properties that can be used throughout the POM as a substitution, and are 
	used as filters in resources if enabled.
	-->
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>		
		
		<!-- see settings.xml for server configuration details, id=github -->
		<github.global.server>github</github.global.server>
		
	</properties>
  
							<!-- Environment Settings -->
  
	<!-- NOT sure if this is needed or for what -->
	<!-- <scm>		
		<url>https://github.com/raulfarah/test</url>
		<connection>scm:git:git://github.com:raulfarah/test.git</connection>		 
		<developerConnection>scm:git:git@github.com:raulfarah/test.git</developerConnection>
		<tag>HEAD</tag>
	</scm>  -->
	
	<!-- 
	Distribution information for a project that enables deployment of the site and artifacts 
	to remote web servers and repositories respectively.
	-->
	<distributionManagement>
	
		<!-- this part not tested -->
		<site>
			<id>github-pages-site</id>
			<name>Deployment through GitHub's site deployment plugin</name>

			<!-- used by scm-publish plugin to override default content location -->
			<!-- <url>scm:git:https://github.com/raulfarah/test/gh-pages</url>  -->			
		</site> 		
	
		<!-- this part works - uploaded artfacts to a github branch mvn-repo -->
		<repository>
			<id>internal.repo</id>
			<name>Temporary Staging Repository</name>
			<url>file://${project.build.directory}/mvn-repo</url>
		</repository>
	</distributionManagement>					
						
					<!-- More Project Information  used for mvn site -->
	
	<name>Project-Testing-Selenium-TestNG</name>
	<description>Selenium TestNg Project to test latienda application</description>	
	<url>http://maven.apache.org</url>
	<inceptionYear>2015</inceptionYear>

	
	<!--
	This element describes various attributes of the organization to 
	which the project belongs. These attributes are utilized when documentation 
	is created (for copyright notices and links).
	-->
	<organization>		
		<name>Selenium Automation Test Company</name>
		<url>http://LatiendaSelenium-Testing.org</url>
	</organization>
	
	<!-- Describes the committers of a project. -->
	<developers>
		<developer>
			<id>100001</id>
			<name>Raul Farah</name>
			<email>abc967@yahoo.com</email>
			<url>http://latiendaSeleniumTesting.org/afarah</url>			
			<roles>
				<role>Designer</role>
				<role>Developer</role>
			</roles>
			<timezone>New_York</timezone>
			<properties>
				<picUrl>http://latiendaSeleniumTesting.org/afarah</picUrl>
			</properties>
		</developer>
	</developers>
	
	
</project>
